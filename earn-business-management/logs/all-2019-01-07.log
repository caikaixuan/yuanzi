2019-01-07 10:33:14,127:INFO main (EnumUtils.java:192) - EnumScanner将扫描:com.ygbc.brain
2019-01-07 10:33:14,343:INFO main (EnumUtils.java:106) - 加载枚举:ObjectType
2019-01-07 10:33:14,344:INFO main (EnumUtils.java:106) - 加载枚举:TransactionType
2019-01-07 10:33:14,344:INFO main (EnumUtils.java:106) - 加载枚举:DocumentType
2019-01-07 10:33:14,344:INFO main (EnumUtils.java:106) - 加载枚举:TransactionStatus
2019-01-07 10:33:14,345:INFO main (EnumUtils.java:106) - 加载枚举:LcReferenceType
2019-01-07 10:33:14,345:INFO main (EnumUtils.java:106) - 加载枚举:PendingStatus
2019-01-07 10:33:14,345:INFO main (EnumUtils.java:106) - 加载枚举:ReferenceType
2019-01-07 10:33:14,345:INFO main (EnumUtils.java:111) - 加载枚举:TrueFalse
2019-01-07 10:33:14,346:INFO main (EnumUtils.java:111) - 加载枚举:YesNo
2019-01-07 10:33:14,346:INFO main (EnumUtils.java:111) - 加载枚举:AllowType
2019-01-07 10:33:14,346:INFO main (EnumUtils.java:111) - 加载枚举:UserStatus
2019-01-07 10:39:20,619:INFO main (EnumUtils.java:192) - EnumScanner将扫描:com.ygbc.brain
2019-01-07 10:39:20,830:INFO main (EnumUtils.java:106) - 加载枚举:ObjectType
2019-01-07 10:39:20,830:INFO main (EnumUtils.java:106) - 加载枚举:TransactionType
2019-01-07 10:39:20,830:INFO main (EnumUtils.java:106) - 加载枚举:DocumentType
2019-01-07 10:39:20,831:INFO main (EnumUtils.java:106) - 加载枚举:TransactionStatus
2019-01-07 10:39:20,831:INFO main (EnumUtils.java:106) - 加载枚举:LcReferenceType
2019-01-07 10:39:20,831:INFO main (EnumUtils.java:106) - 加载枚举:PendingStatus
2019-01-07 10:39:20,831:INFO main (EnumUtils.java:106) - 加载枚举:ReferenceType
2019-01-07 10:39:20,832:INFO main (EnumUtils.java:111) - 加载枚举:TrueFalse
2019-01-07 10:39:20,832:INFO main (EnumUtils.java:111) - 加载枚举:YesNo
2019-01-07 10:39:20,832:INFO main (EnumUtils.java:111) - 加载枚举:AllowType
2019-01-07 10:39:20,832:INFO main (EnumUtils.java:111) - 加载枚举:UserStatus
2019-01-07 10:39:51,996:INFO qtp2134357721-25 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.create开始执行
2019-01-07 10:39:52,023:INFO qtp2134357721-25 (LogAspect.java:51) - 请求参数1:{"data":{"experimentPlace":"soho 1902","stitchImageSrc":"/user/desktop/","managementUserId":"2","experimentImageId":"image_one","name":"测试mapper文件","preTreatingImageSrc":"/user/desktop/after","status":"1"},"pending":false}
2019-01-07 10:39:52,182:INFO qtp2134357721-25 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.create返回值:{"errors":{"planEndTime":"请输入实验计划结束时间","experimentTime":"请输入实验时间","planStartTime":"请输入实验计划开始时间"},"pageNo":1,"pageSize":10,"respCode":"9004","respMsg":"参数校验未通过","totalCount":0,"totalPage":0}
2019-01-07 10:42:34,978:INFO qtp2134357721-26 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.create开始执行
2019-01-07 10:42:34,982:INFO qtp2134357721-26 (LogAspect.java:51) - 请求参数1:{"data":{"experimentPlace":"soho 1902","experimentTime":"2019-01-04 16:44:26","planStartTime":"2019-01-04 16:44:26","stitchImageSrc":"/user/desktop/","managementUserId":"2","experimentImageId":"image_one","name":"测试mapper文件","planEndTime":"2019-01-07 16:44:26","preTreatingImageSrc":"/user/desktop/after","status":"1"},"pending":false}
2019-01-07 10:42:37,148:INFO qtp2134357721-26 (MybatisAutoMapperInterceptor.java:50) - 使用插件处理SQL语句
2019-01-07 10:42:37,165:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into experiment(name,experiment_time,experiment_place,management_user_id,experiment_image_id,plan_start_time,plan_end_time,stitch_image_src,pre_treating_image_src,status) values (?,?,?,?,?,?,?,?,?,?) 
2019-01-07 10:42:37,212:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - ==> Parameters: 测试mapper文件(String), 2019-01-04 16:44:26.0(Timestamp), soho 1902(String), 2(String), image_one(String), 2019-01-04 16:44:26.0(Timestamp), 2019-01-07 16:44:26.0(Timestamp), /user/desktop/(String), /user/desktop/after(String), 1(String)
2019-01-07 10:42:37,226:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - <==    Updates: 1
2019-01-07 10:42:37,259:INFO qtp2134357721-26 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.create返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 10:44:28,555:INFO qtp2134357721-29 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.list开始执行
2019-01-07 10:44:28,567:INFO qtp2134357721-29 (LogAspect.java:51) - 请求参数1:{"data":{"planStartTime":"2019-01-03 16:44:26","managementUserId":"3","planEndTime":"2019-01-04 16:44:26"},"pending":false}
2019-01-07 10:44:28,665:DEBUG qtp2134357721-29 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from experiment WHERE management_user_id = ? and DATE_FORMAT(plan_start_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and DATE_FORMAT(plan_end_time, '%Y-%m-%d %H:%I:%S') <= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 
2019-01-07 10:44:28,667:DEBUG qtp2134357721-29 (BaseJdbcLogger.java:159) - ==> Parameters: 3(String), 2019-01-03 16:44:26.0(Timestamp), 2019-01-04 16:44:26.0(Timestamp)
2019-01-07 10:44:28,685:DEBUG qtp2134357721-29 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 10:44:28,687:INFO qtp2134357721-29 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.list返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 10:46:22,045:INFO qtp2134357721-29 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.list开始执行
2019-01-07 10:46:22,046:INFO qtp2134357721-29 (LogAspect.java:51) - 请求参数1:{"data":{"planStartTime":"2019-01-05 16:44:26","managementUserId":"3","planEndTime":"2019-01-07 16:44:26"},"pending":false}
2019-01-07 10:46:22,054:DEBUG qtp2134357721-29 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from experiment WHERE management_user_id = ? and DATE_FORMAT(plan_start_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and DATE_FORMAT(plan_end_time, '%Y-%m-%d %H:%I:%S') <= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 
2019-01-07 10:46:22,055:DEBUG qtp2134357721-29 (BaseJdbcLogger.java:159) - ==> Parameters: 3(String), 2019-01-05 16:44:26.0(Timestamp), 2019-01-07 16:44:26.0(Timestamp)
2019-01-07 10:46:22,061:DEBUG qtp2134357721-29 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 10:46:22,062:INFO qtp2134357721-29 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.list返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 10:49:03,155:INFO qtp2134357721-30 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.list开始执行
2019-01-07 10:49:03,156:INFO qtp2134357721-30 (LogAspect.java:51) - 请求参数1:{"data":{"planStartTime":"2019-01-01 16:44:26","managementUserId":"3","planEndTime":"2019-01-07 16:44:26"},"pending":false}
2019-01-07 10:49:03,168:DEBUG qtp2134357721-30 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from experiment WHERE management_user_id = ? and DATE_FORMAT(plan_start_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and DATE_FORMAT(plan_end_time, '%Y-%m-%d %H:%I:%S') <= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 
2019-01-07 10:49:03,170:DEBUG qtp2134357721-30 (BaseJdbcLogger.java:159) - ==> Parameters: 3(String), 2019-01-01 16:44:26.0(Timestamp), 2019-01-07 16:44:26.0(Timestamp)
2019-01-07 10:49:03,176:DEBUG qtp2134357721-30 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 10:49:03,176:INFO qtp2134357721-30 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.list返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 10:49:06,160:INFO qtp2134357721-30 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.list开始执行
2019-01-07 10:49:06,160:INFO qtp2134357721-30 (LogAspect.java:51) - 请求参数1:{"data":{"planStartTime":"2019-01-01 16:44:26","managementUserId":"3","planEndTime":"2019-01-07 16:44:26"},"pending":false}
2019-01-07 10:49:06,162:DEBUG qtp2134357721-30 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from experiment WHERE management_user_id = ? and DATE_FORMAT(plan_start_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and DATE_FORMAT(plan_end_time, '%Y-%m-%d %H:%I:%S') <= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 
2019-01-07 10:49:06,163:DEBUG qtp2134357721-30 (BaseJdbcLogger.java:159) - ==> Parameters: 3(String), 2019-01-01 16:44:26.0(Timestamp), 2019-01-07 16:44:26.0(Timestamp)
2019-01-07 10:49:06,168:DEBUG qtp2134357721-30 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 10:49:06,169:INFO qtp2134357721-30 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.list返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 10:49:38,192:INFO qtp2134357721-27 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.list开始执行
2019-01-07 10:49:38,193:INFO qtp2134357721-27 (LogAspect.java:51) - 请求参数1:{"data":{"planStartTime":"2019-01-01 16:44:26","planEndTime":"2019-01-07 16:44:26"},"pending":false}
2019-01-07 10:49:38,195:DEBUG qtp2134357721-27 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from experiment WHERE DATE_FORMAT(plan_start_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and DATE_FORMAT(plan_end_time, '%Y-%m-%d %H:%I:%S') <= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 
2019-01-07 10:49:38,197:DEBUG qtp2134357721-27 (BaseJdbcLogger.java:159) - ==> Parameters: 2019-01-01 16:44:26.0(Timestamp), 2019-01-07 16:44:26.0(Timestamp)
2019-01-07 10:49:38,205:DEBUG qtp2134357721-27 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 10:49:38,208:DEBUG qtp2134357721-27 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, experiment_time, experiment_place, management_user_id, experiment_image_id, plan_start_time, plan_end_time, stitch_image_src, pre_treating_image_src, status, create_time, create_by, update_time, update_by, ver, is_del from experiment WHERE DATE_FORMAT(plan_start_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and DATE_FORMAT(plan_end_time, '%Y-%m-%d %H:%I:%S') <= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 limit 10 
2019-01-07 10:49:38,209:DEBUG qtp2134357721-27 (BaseJdbcLogger.java:159) - ==> Parameters: 2019-01-01 16:44:26.0(Timestamp), 2019-01-07 16:44:26.0(Timestamp)
2019-01-07 10:49:38,216:DEBUG qtp2134357721-27 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 10:49:38,257:INFO qtp2134357721-27 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.list返回值:{"data":[{"experimentImageId":"image_one","experimentPlace":"soho 1902","experimentTime":"2019-01-04 16:44:26","id":12,"managementUserId":"2","name":"测试mapper文件","planEndTime":"2019-01-07 16:44:26","planStartTime":"2019-01-04 16:44:26","preTreatingImageSrc":"/user/desktop/after","status":"1","stitchImageSrc":"/user/desktop/"}],"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":1,"totalPage":1}
2019-01-07 10:49:45,195:INFO qtp2134357721-26 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.list开始执行
2019-01-07 10:49:45,196:INFO qtp2134357721-26 (LogAspect.java:51) - 请求参数1:{"data":{"planStartTime":"2019-01-05 16:44:26","planEndTime":"2019-01-07 16:44:26"},"pending":false}
2019-01-07 10:49:45,199:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from experiment WHERE DATE_FORMAT(plan_start_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and DATE_FORMAT(plan_end_time, '%Y-%m-%d %H:%I:%S') <= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 
2019-01-07 10:49:45,201:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - ==> Parameters: 2019-01-05 16:44:26.0(Timestamp), 2019-01-07 16:44:26.0(Timestamp)
2019-01-07 10:49:45,207:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 10:49:45,209:INFO qtp2134357721-26 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.list返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 10:50:33,825:INFO qtp2134357721-29 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.update开始执行
2019-01-07 10:50:33,830:INFO qtp2134357721-29 (LogAspect.java:51) - 请求参数1:{"data":{"experimentPlace":"soho 1902","stitchImageSrc":"/user/desktop/","managementUserId":"2","experimentImageId":"image_one","name":"mapper文件","preTreatingImageSrc":"/user/desktop/after","status":"1"},"pending":false}
2019-01-07 10:50:33,842:INFO qtp2134357721-29 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.update返回值:{"errors":{"planEndTime":"请输入实验计划结束时间","id":"请选择要更新的实验","planStartTime":"请输入实验计划开始时间"},"pageNo":1,"pageSize":10,"respCode":"9004","respMsg":"参数校验未通过","totalCount":0,"totalPage":0}
2019-01-07 10:51:01,939:INFO qtp2134357721-28 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.update开始执行
2019-01-07 10:51:01,940:INFO qtp2134357721-28 (LogAspect.java:51) - 请求参数1:{"data":{"experimentPlace":"soho 1902","experimentTime":"2019-01-05 16:44:26","planStartTime":"2019-01-04 16:44:26","stitchImageSrc":"/user/desktop/","managementUserId":"2","experimentImageId":"image_one","name":"mapper文件","planEndTime":"2019-01-07 16:44:26","preTreatingImageSrc":"/user/desktop/after","status":"1"},"pending":false}
2019-01-07 10:51:01,941:INFO qtp2134357721-28 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.update返回值:{"errors":{"id":"请选择要更新的实验"},"pageNo":1,"pageSize":10,"respCode":"9004","respMsg":"参数校验未通过","totalCount":0,"totalPage":0}
2019-01-07 10:51:28,266:INFO qtp2134357721-28 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.update开始执行
2019-01-07 10:51:28,266:INFO qtp2134357721-28 (LogAspect.java:51) - 请求参数1:{"data":{"experimentPlace":"soho 1902","experimentTime":"2019-01-05 16:44:26","planStartTime":"2019-01-04 16:44:26","stitchImageSrc":"/user/desktop/","managementUserId":"2","experimentImageId":"image_one","name":"mapper文件","planEndTime":"2019-01-07 16:44:26","id":12,"preTreatingImageSrc":"/user/desktop/after","status":"1"},"pending":false}
2019-01-07 10:51:28,288:DEBUG qtp2134357721-28 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, experiment_time, experiment_place, management_user_id, experiment_image_id, plan_start_time, plan_end_time, stitch_image_src, pre_treating_image_src, status, create_time, create_by, update_time, update_by, ver, is_del from experiment where id = ? and 1 = 1 
2019-01-07 10:51:28,289:DEBUG qtp2134357721-28 (BaseJdbcLogger.java:159) - ==> Parameters: 12(Long)
2019-01-07 10:51:28,297:DEBUG qtp2134357721-28 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 10:51:28,300:INFO qtp2134357721-28 (MybatisAutoMapperInterceptor.java:50) - 使用插件处理SQL语句
2019-01-07 10:51:28,301:DEBUG qtp2134357721-28 (BaseJdbcLogger.java:159) - ==>  Preparing: update experiment set name = ?,experiment_time = ?,experiment_place = ?,management_user_id = ?,experiment_image_id = ?,plan_start_time = ?,plan_end_time = ?,stitch_image_src = ?,pre_treating_image_src = ?,status = ?,update_by = ?,ver = ?,is_del = ?,ver = ver + 1 where id = ? 
2019-01-07 10:51:28,303:DEBUG qtp2134357721-28 (BaseJdbcLogger.java:159) - ==> Parameters: mapper文件(String), 2019-01-05 16:44:26.0(Timestamp), soho 1902(String), 2(String), image_one(String), 2019-01-04 16:44:26.0(Timestamp), 2019-01-07 16:44:26.0(Timestamp), /user/desktop/(String), /user/desktop/after(String), 1(String), SYS(String), 0(Integer), 0(Integer), 12(Long)
2019-01-07 10:51:28,312:DEBUG qtp2134357721-28 (BaseJdbcLogger.java:159) - <==    Updates: 1
2019-01-07 10:51:28,338:INFO qtp2134357721-28 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.update返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 10:51:50,772:INFO qtp2134357721-26 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.detail开始执行
2019-01-07 10:51:50,775:INFO qtp2134357721-26 (LogAspect.java:51) - 请求参数1:{"data":{"id":12},"pending":false}
2019-01-07 10:51:50,790:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, experiment_time, experiment_place, management_user_id, experiment_image_id, plan_start_time, plan_end_time, stitch_image_src, pre_treating_image_src, status, create_time, create_by, update_time, update_by, ver, is_del from experiment where id = ? and 1 = 1 
2019-01-07 10:51:50,791:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - ==> Parameters: 12(Long)
2019-01-07 10:51:50,800:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 10:51:50,801:INFO qtp2134357721-26 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.detail返回值:{"data":{"experimentImageId":"image_one","experimentPlace":"soho 1902","experimentTime":"2019-01-05 16:44:26","id":12,"managementUserId":"2","name":"mapper文件","planEndTime":"2019-01-07 16:44:26","planStartTime":"2019-01-04 16:44:26","preTreatingImageSrc":"/user/desktop/after","status":"1","stitchImageSrc":"/user/desktop/"},"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 10:52:06,720:INFO qtp2134357721-26 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.delete开始执行
2019-01-07 10:52:06,722:INFO qtp2134357721-26 (LogAspect.java:51) - 请求参数1:{"data":{"id":12},"pending":false}
2019-01-07 10:52:06,727:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, experiment_time, experiment_place, management_user_id, experiment_image_id, plan_start_time, plan_end_time, stitch_image_src, pre_treating_image_src, status, create_time, create_by, update_time, update_by, ver, is_del from experiment where id = ? and 1 = 1 
2019-01-07 10:52:06,728:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - ==> Parameters: 12(Long)
2019-01-07 10:52:06,740:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 10:52:06,754:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, experiment_time, experiment_place, management_user_id, experiment_image_id, plan_start_time, plan_end_time, stitch_image_src, pre_treating_image_src, status, create_time, create_by, update_time, update_by, ver, is_del from experiment where id = ? and 1 = 1 
2019-01-07 10:52:06,756:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - ==> Parameters: 12(Long)
2019-01-07 10:52:06,764:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 10:52:06,766:INFO qtp2134357721-26 (MybatisAutoMapperInterceptor.java:50) - 使用插件处理SQL语句
2019-01-07 10:52:06,767:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - ==>  Preparing: update experiment set name = ?,experiment_time = ?,experiment_place = ?,management_user_id = ?,experiment_image_id = ?,plan_start_time = ?,plan_end_time = ?,stitch_image_src = ?,pre_treating_image_src = ?,status = ?,update_by = ?,ver = ?,is_del = ?,ver = ver + 1 where id = ? 
2019-01-07 10:52:06,768:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - ==> Parameters: mapper文件(String), 2019-01-05 16:44:26.0(Timestamp), soho 1902(String), 2(String), image_one(String), 2019-01-04 16:44:26.0(Timestamp), 2019-01-07 16:44:26.0(Timestamp), /user/desktop/(String), /user/desktop/after(String), 1(String), SYS(String), 1(Integer), 1(Integer), 12(Long)
2019-01-07 10:52:06,778:DEBUG qtp2134357721-26 (BaseJdbcLogger.java:159) - <==    Updates: 1
2019-01-07 10:52:06,803:INFO qtp2134357721-26 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.delete返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 10:52:20,370:INFO qtp2134357721-28 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.list开始执行
2019-01-07 10:52:20,370:INFO qtp2134357721-28 (LogAspect.java:51) - 请求参数1:{"data":{"isDel":0},"pending":false}
2019-01-07 10:52:20,373:DEBUG qtp2134357721-28 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from experiment WHERE is_del = ? and 1 = 1 
2019-01-07 10:52:20,376:DEBUG qtp2134357721-28 (BaseJdbcLogger.java:159) - ==> Parameters: 0(Integer)
2019-01-07 10:52:20,384:DEBUG qtp2134357721-28 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 10:52:20,385:INFO qtp2134357721-28 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.list返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 10:52:26,452:INFO qtp2134357721-25 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.list开始执行
2019-01-07 10:52:26,452:INFO qtp2134357721-25 (LogAspect.java:51) - 请求参数1:{"data":{"isDel":1},"pending":false}
2019-01-07 10:52:26,454:DEBUG qtp2134357721-25 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from experiment WHERE is_del = ? and 1 = 1 
2019-01-07 10:52:26,457:DEBUG qtp2134357721-25 (BaseJdbcLogger.java:159) - ==> Parameters: 1(Integer)
2019-01-07 10:52:26,466:DEBUG qtp2134357721-25 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 10:52:26,468:DEBUG qtp2134357721-25 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, experiment_time, experiment_place, management_user_id, experiment_image_id, plan_start_time, plan_end_time, stitch_image_src, pre_treating_image_src, status, create_time, create_by, update_time, update_by, ver, is_del from experiment WHERE is_del = ? and 1 = 1 limit 10 
2019-01-07 10:52:26,469:DEBUG qtp2134357721-25 (BaseJdbcLogger.java:159) - ==> Parameters: 1(Integer)
2019-01-07 10:52:26,477:DEBUG qtp2134357721-25 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 10:52:26,487:INFO qtp2134357721-25 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.list返回值:{"data":[{"experimentImageId":"image_one","experimentPlace":"soho 1902","experimentTime":"2019-01-05 16:44:26","id":12,"managementUserId":"2","name":"mapper文件","planEndTime":"2019-01-07 16:44:26","planStartTime":"2019-01-04 16:44:26","preTreatingImageSrc":"/user/desktop/after","status":"1","stitchImageSrc":"/user/desktop/"}],"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":1,"totalPage":1}
2019-01-07 10:58:35,621:INFO main (EnumUtils.java:192) - EnumScanner将扫描:com.ygbc.brain
2019-01-07 10:58:35,841:INFO main (EnumUtils.java:106) - 加载枚举:ObjectType
2019-01-07 10:58:35,842:INFO main (EnumUtils.java:106) - 加载枚举:TransactionType
2019-01-07 10:58:35,842:INFO main (EnumUtils.java:106) - 加载枚举:DocumentType
2019-01-07 10:58:35,843:INFO main (EnumUtils.java:106) - 加载枚举:TransactionStatus
2019-01-07 10:58:35,843:INFO main (EnumUtils.java:106) - 加载枚举:LcReferenceType
2019-01-07 10:58:35,843:INFO main (EnumUtils.java:106) - 加载枚举:PendingStatus
2019-01-07 10:58:35,843:INFO main (EnumUtils.java:106) - 加载枚举:ReferenceType
2019-01-07 10:58:35,843:INFO main (EnumUtils.java:111) - 加载枚举:TrueFalse
2019-01-07 10:58:35,844:INFO main (EnumUtils.java:111) - 加载枚举:YesNo
2019-01-07 10:58:35,844:INFO main (EnumUtils.java:111) - 加载枚举:AllowType
2019-01-07 10:58:35,844:INFO main (EnumUtils.java:111) - 加载枚举:UserStatus
2019-01-07 10:59:22,587:INFO qtp1579015748-29 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.AlgorithmServiceFacadeImpl.list开始执行
2019-01-07 10:59:22,619:INFO qtp1579015748-29 (LogAspect.java:51) - 请求参数1:{"data":{"createTime":"2019-01-08 20:56:16"},"pending":false}
2019-01-07 10:59:22,960:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from algorithm WHERE DATE_FORMAT(create_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 
2019-01-07 10:59:23,008:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - ==> Parameters: 2019-01-08 20:56:16.0(Timestamp)
2019-01-07 10:59:23,034:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 10:59:23,047:INFO qtp1579015748-29 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.AlgorithmServiceFacadeImpl.list返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 10:59:33,279:INFO qtp1579015748-25 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.AlgorithmServiceFacadeImpl.list开始执行
2019-01-07 10:59:33,280:INFO qtp1579015748-25 (LogAspect.java:51) - 请求参数1:{"data":{"createTime":"2019-01-03 20:56:16"},"pending":false}
2019-01-07 10:59:33,284:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from algorithm WHERE DATE_FORMAT(create_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 
2019-01-07 10:59:33,285:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==> Parameters: 2019-01-03 20:56:16.0(Timestamp)
2019-01-07 10:59:33,292:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 10:59:33,302:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, name_cn, name_en, remark,arguments, create_time,create_by, update_time, update_by, ver, is_del from algorithm WHERE DATE_FORMAT(create_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 limit 10 
2019-01-07 10:59:33,303:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==> Parameters: 2019-01-03 20:56:16.0(Timestamp)
2019-01-07 10:59:33,314:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - <==      Total: 4
2019-01-07 10:59:33,352:INFO qtp1579015748-25 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.AlgorithmServiceFacadeImpl.list返回值:{"data":[{"arguments":{{"argument_name":"x","argument_description":"横向坐标","argument_type":"Long"}:{"argument_name":"y","argument_description":"纵向坐标","argument_type":"Long"}},"id":31,"name":"用来测试json字段第五次","nameCn":"第三个算法","nameEn":"third algorithm","remark":"吊炸天"},{"arguments":{{"argument_name":"a","argument_description":"a","argument_type":"Long"}:{"argument_name":"b","argument_description":"b","argument_type":"Long"}},"id":32,"name":"用来测试list字段第七次","nameCn":"第三个算法","nameEn":"third algorithm","remark":"吊炸天"},{"arguments":{{"argument_name":"x","argument_description":"横向坐标","argument_type":"Long"}:{"argument_name":"y","argument_description":"纵向坐标","argument_type":"Long"}},"id":33,"name":"mapper文件没问题","nameCn":"这个算法第一吊","nameEn":"this algorithm is no.1","remark":"我就这么描述了怎么样"},{"arguments":{{"argument_name":"x","argument_description":"横向坐标","argument_type":"Long"}:{"argument_name":"y","argument_description":"纵向坐标","argument_type":"Long"}},"id":34,"name":"用来测试list字段第五次","nameCn":"第三个算法","nameEn":"third algorithm","remark":"吊炸天"}],"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":4,"totalPage":1}
2019-01-07 11:00:39,999:INFO qtp1579015748-30 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.create开始执行
2019-01-07 11:00:40,015:INFO qtp1579015748-30 (LogAspect.java:51) - 请求参数1:{"data":{"experimentImpedance":10,"subjectUserId":"10","deviceNumber":"AK47","sampleRate":2000,"experimentType":"1","referenceElectrode":"123456","experimentPlace":"北京","hz":1000,"experimentPeriod":10,"brainWave":"这个脑波的图样跟爱因斯坦的一模一样卧槽","name":"第一个实验记录","temperature":26,"experimentCode":"9","subjectUserName":"tom"},"pending":false}
2019-01-07 11:00:40,088:INFO qtp1579015748-30 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.create返回值:{"errors":{"experimentEndTime":"请输入实验结束时间","experimentStartTime":"请输入实验开始时间"},"pageNo":1,"pageSize":10,"respCode":"9004","respMsg":"参数校验未通过","totalCount":0,"totalPage":0}
2019-01-07 11:01:55,037:INFO qtp1579015748-26 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.create开始执行
2019-01-07 11:01:55,039:INFO qtp1579015748-26 (LogAspect.java:51) - 请求参数1:{"data":{"experimentEndTime":"2019-01-07 16:44:26","experimentImpedance":10,"experimentStartTime":"2019-01-04 16:44:26","subjectUserId":"10","deviceNumber":"AK47","sampleRate":2000,"experimentType":"1","referenceElectrode":"123456","experimentPlace":"北京","hz":1000,"experimentPeriod":10,"brainWave":"这个脑波的图样跟爱因斯坦的一模一样卧槽","name":"第一个实验记录","temperature":26,"experimentCode":"9","subjectUserName":"tom"},"pending":false}
2019-01-07 11:01:55,076:INFO qtp1579015748-26 (MybatisAutoMapperInterceptor.java:50) - 使用插件处理SQL语句
2019-01-07 11:01:55,090:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into experiment_record(name,experiment_code,subject_user_id,subject_user_name,experiment_start_time,experiment_end_time,experiment_period,experiment_place,experiment_type,hz,sample_rate,experiment_impedance,reference_electrode,device_number,temperature,brain_wave) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
2019-01-07 11:01:55,093:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - ==> Parameters: 第一个实验记录(String), 9(String), 10(String), tom(String), 2019-01-04 16:44:26.0(Timestamp), 2019-01-07 16:44:26.0(Timestamp), 10(Integer), 北京(String), 1(String), 1000(Integer), 2000(Integer), 10(Integer), 123456(String), AK47(String), 26(Integer), 这个脑波的图样跟爱因斯坦的一模一样卧槽(String)
2019-01-07 11:01:55,116:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - <==    Updates: 1
2019-01-07 11:01:55,117:INFO qtp1579015748-26 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.create返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 11:03:37,300:INFO qtp1579015748-25 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list开始执行
2019-01-07 11:03:37,310:INFO qtp1579015748-25 (LogAspect.java:51) - 请求参数1:{"data":{"experimentStartTime":"2019-01-04 16:44:26"},"pending":false}
2019-01-07 11:03:37,368:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from experiment_record WHERE DATE_FORMAT(experiment_start_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 
2019-01-07 11:03:37,370:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==> Parameters: 2019-01-04 16:44:26.0(Timestamp)
2019-01-07 11:03:37,377:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:03:37,380:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, experiment_code, subject_user_id, subject_user_name,experiment_start_time,experiment_end_time,experiment_period, experiment_place,experiment_type,hz,sample_rate,experiment_impedance,reference_electrode,device_number,temperature,brain_wave, create_by, update_time, update_by, ver, is_del from experiment_record WHERE DATE_FORMAT(experiment_start_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 limit 10 
2019-01-07 11:03:37,381:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==> Parameters: 2019-01-04 16:44:26.0(Timestamp)
2019-01-07 11:03:37,392:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:03:37,427:INFO qtp1579015748-25 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list返回值:{"data":[{"brainWave":"这个脑波的图样跟爱因斯坦的一模一样卧槽","deviceNumber":"AK47","experimentCode":"9","experimentEndTime":"2019-01-07 16:44:26","experimentImpedance":10,"experimentPeriod":10,"experimentPlace":"北京","experimentStartTime":"2019-01-04 16:44:26","experimentType":"1","hz":1000,"id":13,"name":"第一个实验记录","referenceElectrode":"123456","sampleRate":2000,"subjectUserId":"10","subjectUserName":"tom","temperature":26}],"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":1,"totalPage":1}
2019-01-07 11:03:57,306:INFO qtp1579015748-26 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list开始执行
2019-01-07 11:03:57,307:INFO qtp1579015748-26 (LogAspect.java:51) - 请求参数1:{"data":{"experimentStartTime":"2019-01-04 16:44:27"},"pending":false}
2019-01-07 11:03:57,309:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from experiment_record WHERE DATE_FORMAT(experiment_start_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 
2019-01-07 11:03:57,310:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - ==> Parameters: 2019-01-04 16:44:27.0(Timestamp)
2019-01-07 11:03:57,317:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:03:57,318:INFO qtp1579015748-26 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 11:04:11,752:INFO qtp1579015748-25 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list开始执行
2019-01-07 11:04:11,752:INFO qtp1579015748-25 (LogAspect.java:51) - 请求参数1:{"data":{"experimentEndTime":"2019-01-08 16:44:26","experimentStartTime":"2019-01-04 16:44:26"},"pending":false}
2019-01-07 11:04:11,758:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from experiment_record WHERE DATE_FORMAT(experiment_start_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and DATE_FORMAT(experiment_end_time, '%Y-%m-%d %H:%I:%S') <= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 
2019-01-07 11:04:11,759:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==> Parameters: 2019-01-04 16:44:26.0(Timestamp), 2019-01-08 16:44:26.0(Timestamp)
2019-01-07 11:04:11,767:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:04:11,771:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, experiment_code, subject_user_id, subject_user_name,experiment_start_time,experiment_end_time,experiment_period, experiment_place,experiment_type,hz,sample_rate,experiment_impedance,reference_electrode,device_number,temperature,brain_wave, create_by, update_time, update_by, ver, is_del from experiment_record WHERE DATE_FORMAT(experiment_start_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and DATE_FORMAT(experiment_end_time, '%Y-%m-%d %H:%I:%S') <= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 limit 10 
2019-01-07 11:04:11,772:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==> Parameters: 2019-01-04 16:44:26.0(Timestamp), 2019-01-08 16:44:26.0(Timestamp)
2019-01-07 11:04:11,800:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:04:11,808:INFO qtp1579015748-25 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list返回值:{"data":[{"brainWave":"这个脑波的图样跟爱因斯坦的一模一样卧槽","deviceNumber":"AK47","experimentCode":"9","experimentEndTime":"2019-01-07 16:44:26","experimentImpedance":10,"experimentPeriod":10,"experimentPlace":"北京","experimentStartTime":"2019-01-04 16:44:26","experimentType":"1","hz":1000,"id":13,"name":"第一个实验记录","referenceElectrode":"123456","sampleRate":2000,"subjectUserId":"10","subjectUserName":"tom","temperature":26}],"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":1,"totalPage":1}
2019-01-07 11:04:19,869:INFO qtp1579015748-26 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list开始执行
2019-01-07 11:04:19,871:INFO qtp1579015748-26 (LogAspect.java:51) - 请求参数1:{"data":{"experimentEndTime":"2019-01-05 16:44:26","experimentStartTime":"2019-01-04 16:44:26"},"pending":false}
2019-01-07 11:04:19,877:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from experiment_record WHERE DATE_FORMAT(experiment_start_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and DATE_FORMAT(experiment_end_time, '%Y-%m-%d %H:%I:%S') <= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 
2019-01-07 11:04:19,880:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - ==> Parameters: 2019-01-04 16:44:26.0(Timestamp), 2019-01-05 16:44:26.0(Timestamp)
2019-01-07 11:04:19,888:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:04:19,890:INFO qtp1579015748-26 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 11:04:35,587:INFO qtp1579015748-25 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.update开始执行
2019-01-07 11:04:35,594:INFO qtp1579015748-25 (LogAspect.java:51) - 请求参数1:{"data":{"experimentImpedance":10,"subjectUserId":"10","deviceNumber":"AK47","sampleRate":2000,"experimentType":"1","referenceElectrode":"123456","experimentPlace":"hongkong","hz":1000,"experimentPeriod":10,"brainWave":"这个脑波的图样跟爱因斯坦的一模一样卧槽","name":"第一个实验记录","temperature":26,"experimentCode":"9","id":9,"subjectUserName":"tom"},"pending":false}
2019-01-07 11:04:35,609:INFO qtp1579015748-25 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.update返回值:{"errors":{"experimentEndTime":"请输入实验结束时间","experimentStartTime":"请输入实验开始时间"},"pageNo":1,"pageSize":10,"respCode":"9004","respMsg":"参数校验未通过","totalCount":0,"totalPage":0}
2019-01-07 11:05:14,769:INFO qtp1579015748-29 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.update开始执行
2019-01-07 11:05:14,770:INFO qtp1579015748-29 (LogAspect.java:51) - 请求参数1:{"data":{"experimentEndTime":"2019-01-08 16:44:26","experimentImpedance":10,"experimentStartTime":"2019-01-04 16:44:26","subjectUserId":"10","deviceNumber":"AK47","sampleRate":2000,"experimentType":"1","referenceElectrode":"123456","experimentPlace":"北京","hz":1000,"experimentPeriod":10,"brainWave":"这个脑波的图样跟爱因斯坦的一模一样卧槽","name":"mapper文件没问题","temperature":26,"experimentCode":"9","id":13,"subjectUserName":"tom"},"pending":false}
2019-01-07 11:05:14,786:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, experiment_code, subject_user_id, subject_user_name,experiment_start_time,experiment_end_time,experiment_period, experiment_place,experiment_type,hz,sample_rate,experiment_impedance,reference_electrode,device_number,temperature,brain_wave, create_by, update_time, update_by, ver, is_del from experiment_record where id = ? and 1 = 1 
2019-01-07 11:05:14,788:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - ==> Parameters: 13(Long)
2019-01-07 11:05:14,799:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:05:14,803:INFO qtp1579015748-29 (MybatisAutoMapperInterceptor.java:50) - 使用插件处理SQL语句
2019-01-07 11:05:14,805:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - ==>  Preparing: update experiment_record set name = ?,experiment_code = ?,subject_user_id = ?,subject_user_name = ?,experiment_start_time = ?,experiment_end_time = ?,experiment_period = ?,experiment_place = ?,experiment_type = ?,hz = ?,sample_rate = ?,experiment_impedance = ?,reference_electrode = ?,device_number = ?,temperature = ?,brain_wave = ?,update_by = ?,ver = ?,is_del = ?,ver = ver + 1 where id = ? 
2019-01-07 11:05:14,808:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - ==> Parameters: mapper文件没问题(String), 9(String), 10(String), tom(String), 2019-01-04 16:44:26.0(Timestamp), 2019-01-08 16:44:26.0(Timestamp), 10(Integer), 北京(String), 1(String), 1000(Integer), 2000(Integer), 10(Integer), 123456(String), AK47(String), 26(Integer), 这个脑波的图样跟爱因斯坦的一模一样卧槽(String), SYS(String), 0(Integer), 0(Integer), 13(Long)
2019-01-07 11:05:14,830:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - <==    Updates: 1
2019-01-07 11:05:14,832:INFO qtp1579015748-29 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.update返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 11:05:32,720:INFO qtp1579015748-25 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.detail开始执行
2019-01-07 11:05:32,722:INFO qtp1579015748-25 (LogAspect.java:51) - 请求参数1:{"data":{"id":13},"pending":false}
2019-01-07 11:05:32,736:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, experiment_code, subject_user_id, subject_user_name,experiment_start_time,experiment_end_time,experiment_period, experiment_place,experiment_type,hz,sample_rate,experiment_impedance,reference_electrode,device_number,temperature,brain_wave, create_by, update_time, update_by, ver, is_del from experiment_record where id = ? and 1 = 1 
2019-01-07 11:05:32,738:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==> Parameters: 13(Long)
2019-01-07 11:05:32,749:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:05:32,753:INFO qtp1579015748-25 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.detail返回值:{"data":{"brainWave":"这个脑波的图样跟爱因斯坦的一模一样卧槽","deviceNumber":"AK47","experimentCode":"9","experimentEndTime":"2019-01-08 16:44:26","experimentImpedance":10,"experimentPeriod":10,"experimentPlace":"北京","experimentStartTime":"2019-01-04 16:44:26","experimentType":"1","hz":1000,"id":13,"name":"mapper文件没问题","referenceElectrode":"123456","sampleRate":2000,"subjectUserId":"10","subjectUserName":"tom","temperature":26},"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 11:05:42,980:INFO qtp1579015748-30 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.delete开始执行
2019-01-07 11:05:42,984:INFO qtp1579015748-30 (LogAspect.java:51) - 请求参数1:{"data":{"id":13},"pending":false}
2019-01-07 11:05:42,988:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, experiment_code, subject_user_id, subject_user_name,experiment_start_time,experiment_end_time,experiment_period, experiment_place,experiment_type,hz,sample_rate,experiment_impedance,reference_electrode,device_number,temperature,brain_wave, create_by, update_time, update_by, ver, is_del from experiment_record where id = ? and 1 = 1 
2019-01-07 11:05:42,989:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - ==> Parameters: 13(Long)
2019-01-07 11:05:43,203:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:05:43,220:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, experiment_code, subject_user_id, subject_user_name,experiment_start_time,experiment_end_time,experiment_period, experiment_place,experiment_type,hz,sample_rate,experiment_impedance,reference_electrode,device_number,temperature,brain_wave, create_by, update_time, update_by, ver, is_del from experiment_record where id = ? and 1 = 1 
2019-01-07 11:05:43,221:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - ==> Parameters: 13(Long)
2019-01-07 11:05:43,228:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:05:43,231:INFO qtp1579015748-30 (MybatisAutoMapperInterceptor.java:50) - 使用插件处理SQL语句
2019-01-07 11:05:43,233:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - ==>  Preparing: update experiment_record set name = ?,experiment_code = ?,subject_user_id = ?,subject_user_name = ?,experiment_start_time = ?,experiment_end_time = ?,experiment_period = ?,experiment_place = ?,experiment_type = ?,hz = ?,sample_rate = ?,experiment_impedance = ?,reference_electrode = ?,device_number = ?,temperature = ?,brain_wave = ?,update_by = ?,ver = ?,is_del = ?,ver = ver + 1 where id = ? 
2019-01-07 11:05:43,236:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - ==> Parameters: mapper文件没问题(String), 9(String), 10(String), tom(String), 2019-01-04 16:44:26.0(Timestamp), 2019-01-08 16:44:26.0(Timestamp), 10(Integer), 北京(String), 1(String), 1000(Integer), 2000(Integer), 10(Integer), 123456(String), AK47(String), 26(Integer), 这个脑波的图样跟爱因斯坦的一模一样卧槽(String), SYS(String), 1(Integer), 1(Integer), 13(Long)
2019-01-07 11:05:43,259:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - <==    Updates: 1
2019-01-07 11:05:43,260:INFO qtp1579015748-30 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.delete返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 11:05:56,460:INFO qtp1579015748-30 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list开始执行
2019-01-07 11:05:56,460:INFO qtp1579015748-30 (LogAspect.java:51) - 请求参数1:{"data":{"isDel":0},"pending":false}
2019-01-07 11:05:56,462:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from experiment_record WHERE is_del = ? and 1 = 1 
2019-01-07 11:05:56,463:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - ==> Parameters: 0(Integer)
2019-01-07 11:05:56,470:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:05:56,471:INFO qtp1579015748-30 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 11:05:59,937:INFO qtp1579015748-26 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list开始执行
2019-01-07 11:05:59,938:INFO qtp1579015748-26 (LogAspect.java:51) - 请求参数1:{"data":{"isDel":1},"pending":false}
2019-01-07 11:05:59,940:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from experiment_record WHERE is_del = ? and 1 = 1 
2019-01-07 11:05:59,942:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - ==> Parameters: 1(Integer)
2019-01-07 11:05:59,954:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:05:59,957:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, experiment_code, subject_user_id, subject_user_name,experiment_start_time,experiment_end_time,experiment_period, experiment_place,experiment_type,hz,sample_rate,experiment_impedance,reference_electrode,device_number,temperature,brain_wave, create_by, update_time, update_by, ver, is_del from experiment_record WHERE is_del = ? and 1 = 1 limit 10 
2019-01-07 11:05:59,957:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - ==> Parameters: 1(Integer)
2019-01-07 11:05:59,964:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:05:59,975:INFO qtp1579015748-26 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list返回值:{"data":[{"brainWave":"这个脑波的图样跟爱因斯坦的一模一样卧槽","deviceNumber":"AK47","experimentCode":"9","experimentEndTime":"2019-01-08 16:44:26","experimentImpedance":10,"experimentPeriod":10,"experimentPlace":"北京","experimentStartTime":"2019-01-04 16:44:26","experimentType":"1","hz":1000,"id":13,"name":"mapper文件没问题","referenceElectrode":"123456","sampleRate":2000,"subjectUserId":"10","subjectUserName":"tom","temperature":26}],"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":1,"totalPage":1}
2019-01-07 11:06:28,712:INFO qtp1579015748-28 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.create开始执行
2019-01-07 11:06:28,721:INFO qtp1579015748-28 (LogAspect.java:51) - 请求参数1:{"data":{"sceneLocationLongitude":"32","managementUserCode":"12","sceneType":"2","name":"脑图三号","sceneLocationLatitude":"96","imageInfo":"这是第三号脑图片","deviceName":"ak-47","imageType":"1","imageSizeY":640,"imageSizeX":320},"pending":false}
2019-01-07 11:06:28,748:INFO qtp1579015748-28 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.create返回值:{"errors":{"getTime":"请输入拍摄时间"},"pageNo":1,"pageSize":10,"respCode":"9004","respMsg":"参数校验未通过","totalCount":0,"totalPage":0}
2019-01-07 11:07:28,313:INFO qtp1579015748-30 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.create开始执行
2019-01-07 11:07:28,314:INFO qtp1579015748-30 (LogAspect.java:51) - 请求参数1:{"data":{"sceneLocationLongitude":"32","managementUserCode":"12","sceneType":"2","getTime":"2019-01-05 16:44:26","name":"脑图三号","sceneLocationLatitude":"96","imageInfo":"这是第三号脑图片","deviceName":"ak-47","imageType":"1","imageSizeY":640,"imageSizeX":320},"pending":false}
2019-01-07 11:07:28,367:INFO qtp1579015748-30 (MybatisAutoMapperInterceptor.java:50) - 使用插件处理SQL语句
2019-01-07 11:07:28,368:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into image(name,image_size_x,image_size_y,get_time,image_type,device_name,scene_location_longitude,scene_location_latitude,scene_type,management_user_code,image_info) values (?,?,?,?,?,?,?,?,?,?,?) 
2019-01-07 11:07:28,370:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - ==> Parameters: 脑图三号(String), 320(Long), 640(Long), 2019-01-05 16:44:26.0(Timestamp), 1(String), ak-47(String), 32(String), 96(String), 2(String), 12(String), 这是第三号脑图片(String)
2019-01-07 11:07:28,379:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - <==    Updates: 1
2019-01-07 11:07:28,430:INFO qtp1579015748-30 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.create返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 11:08:00,050:INFO qtp1579015748-25 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.detail开始执行
2019-01-07 11:08:00,052:INFO qtp1579015748-25 (LogAspect.java:51) - 请求参数1:{"data":{"id":12},"pending":false}
2019-01-07 11:08:00,062:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, image_size_x, image_size_y, get_time,image_type,scene_location_longitude,scene_location_latitude, scene_type,device_name,management_user_code,image_info, create_by, update_time, update_by, ver, is_del from image where id = ? and 1 = 1 
2019-01-07 11:08:00,062:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==> Parameters: 12(Long)
2019-01-07 11:08:00,073:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:08:00,090:INFO qtp1579015748-25 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.detail返回值:{"data":{"deviceName":"ak-47","id":12,"imageInfo":"这是第二号脑图片","imageSizeX":320,"imageSizeY":640,"imageType":"1","managementUserCode":"12","name":"mapper文件没问题","sceneLocationLatitude":"96","sceneLocationLongitude":"32","sceneType":"2"},"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 11:08:46,863:INFO qtp1579015748-29 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.detail开始执行
2019-01-07 11:08:46,863:INFO qtp1579015748-29 (LogAspect.java:51) - 请求参数1:{"data":{"id":13},"pending":false}
2019-01-07 11:08:46,865:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, image_size_x, image_size_y, get_time,image_type,scene_location_longitude,scene_location_latitude, scene_type,device_name,management_user_code,image_info, create_by, update_time, update_by, ver, is_del from image where id = ? and 1 = 1 
2019-01-07 11:08:46,866:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - ==> Parameters: 13(Long)
2019-01-07 11:08:46,908:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:08:46,909:INFO qtp1579015748-29 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.detail返回值:{"data":{"deviceName":"ak-47","getTime":"2019-01-05 16:44:26","id":13,"imageInfo":"这是第三号脑图片","imageSizeX":320,"imageSizeY":640,"imageType":"1","managementUserCode":"12","name":"脑图三号","sceneLocationLatitude":"96","sceneLocationLongitude":"32","sceneType":"2"},"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 11:09:12,978:INFO qtp1579015748-25 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.list开始执行
2019-01-07 11:09:12,986:INFO qtp1579015748-25 (LogAspect.java:51) - 请求参数1:{"data":{"getTime":"2019-01-05 16:44:26"},"pending":false}
2019-01-07 11:09:13,026:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from image WHERE DATE_FORMAT(get_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 
2019-01-07 11:09:13,027:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==> Parameters: 2019-01-05 16:44:26.0(Timestamp)
2019-01-07 11:09:13,036:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:09:13,038:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, image_size_x, image_size_y, get_time,image_type,scene_location_longitude,scene_location_latitude, scene_type,device_name,management_user_code,image_info, create_by, update_time, update_by, ver, is_del from image WHERE DATE_FORMAT(get_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 limit 10 
2019-01-07 11:09:13,039:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==> Parameters: 2019-01-05 16:44:26.0(Timestamp)
2019-01-07 11:09:13,046:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:09:13,056:INFO qtp1579015748-25 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.list返回值:{"data":[{"deviceName":"ak-47","getTime":"2019-01-05 16:44:26","id":13,"imageInfo":"这是第三号脑图片","imageSizeX":320,"imageSizeY":640,"imageType":"1","managementUserCode":"12","name":"脑图三号","sceneLocationLatitude":"96","sceneLocationLongitude":"32","sceneType":"2"}],"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":1,"totalPage":1}
2019-01-07 11:09:21,097:INFO qtp1579015748-26 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.list开始执行
2019-01-07 11:09:21,097:INFO qtp1579015748-26 (LogAspect.java:51) - 请求参数1:{"data":{"getTime":"2019-01-05 16:44:27"},"pending":false}
2019-01-07 11:09:21,100:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from image WHERE DATE_FORMAT(get_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 
2019-01-07 11:09:21,101:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - ==> Parameters: 2019-01-05 16:44:27.0(Timestamp)
2019-01-07 11:09:21,108:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:09:21,108:INFO qtp1579015748-26 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.list返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 11:09:35,224:INFO qtp1579015748-28 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.update开始执行
2019-01-07 11:09:35,230:INFO qtp1579015748-28 (LogAspect.java:51) - 请求参数1:{"data":{"sceneLocationLongitude":"32","managementUserCode":"12","sceneType":"2","name":"风景图","sceneLocationLatitude":"96","imageInfo":"这是第二号脑图片","id":9,"deviceName":"ak-47","imageType":"1","imageSizeY":640,"imageSizeX":320},"pending":false}
2019-01-07 11:09:35,254:DEBUG qtp1579015748-28 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, image_size_x, image_size_y, get_time,image_type,scene_location_longitude,scene_location_latitude, scene_type,device_name,management_user_code,image_info, create_by, update_time, update_by, ver, is_del from image where id = ? and 1 = 1 
2019-01-07 11:09:35,255:DEBUG qtp1579015748-28 (BaseJdbcLogger.java:159) - ==> Parameters: 9(Long)
2019-01-07 11:09:35,262:DEBUG qtp1579015748-28 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:09:35,265:INFO qtp1579015748-28 (MybatisAutoMapperInterceptor.java:50) - 使用插件处理SQL语句
2019-01-07 11:09:35,266:DEBUG qtp1579015748-28 (BaseJdbcLogger.java:159) - ==>  Preparing: update image set name = ?,image_size_x = ?,image_size_y = ?,image_type = ?,device_name = ?,scene_location_longitude = ?,scene_location_latitude = ?,scene_type = ?,management_user_code = ?,image_info = ?,update_by = ?,ver = ?,is_del = ?,ver = ver + 1 where id = ? 
2019-01-07 11:09:35,267:DEBUG qtp1579015748-28 (BaseJdbcLogger.java:159) - ==> Parameters: 风景图(String), 320(Long), 640(Long), 1(String), ak-47(String), 32(String), 96(String), 2(String), 12(String), 这是第二号脑图片(String), SYS(String), 2(Integer), 1(Integer), 9(Long)
2019-01-07 11:09:35,276:DEBUG qtp1579015748-28 (BaseJdbcLogger.java:159) - <==    Updates: 1
2019-01-07 11:09:35,321:INFO qtp1579015748-28 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.update返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 11:10:26,090:INFO main (EnumUtils.java:192) - EnumScanner将扫描:com.ygbc.brain
2019-01-07 11:10:26,292:INFO main (EnumUtils.java:106) - 加载枚举:ObjectType
2019-01-07 11:10:26,293:INFO main (EnumUtils.java:106) - 加载枚举:TransactionType
2019-01-07 11:10:26,293:INFO main (EnumUtils.java:106) - 加载枚举:DocumentType
2019-01-07 11:10:26,294:INFO main (EnumUtils.java:106) - 加载枚举:TransactionStatus
2019-01-07 11:10:26,294:INFO main (EnumUtils.java:106) - 加载枚举:LcReferenceType
2019-01-07 11:10:26,294:INFO main (EnumUtils.java:106) - 加载枚举:PendingStatus
2019-01-07 11:10:26,294:INFO main (EnumUtils.java:106) - 加载枚举:ReferenceType
2019-01-07 11:10:26,294:INFO main (EnumUtils.java:111) - 加载枚举:TrueFalse
2019-01-07 11:10:26,295:INFO main (EnumUtils.java:111) - 加载枚举:YesNo
2019-01-07 11:10:26,295:INFO main (EnumUtils.java:111) - 加载枚举:AllowType
2019-01-07 11:10:26,295:INFO main (EnumUtils.java:111) - 加载枚举:UserStatus
2019-01-07 11:10:41,572:INFO qtp1579015748-26 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.update开始执行
2019-01-07 11:10:41,603:INFO qtp1579015748-26 (LogAspect.java:51) - 请求参数1:{"data":{"sceneLocationLongitude":"32","managementUserCode":"12","sceneType":"2","name":"风景图","sceneLocationLatitude":"96","imageInfo":"这是第二号脑图片","id":9,"deviceName":"ak-47","imageType":"1","imageSizeY":640,"imageSizeX":320},"pending":false}
2019-01-07 11:10:41,879:INFO qtp1579015748-26 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.update返回值:{"errors":{"getTime":"请输入拍摄时间"},"pageNo":1,"pageSize":10,"respCode":"9004","respMsg":"参数校验未通过","totalCount":0,"totalPage":0}
2019-01-07 11:10:56,678:INFO qtp1579015748-26 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.update开始执行
2019-01-07 11:10:56,681:INFO qtp1579015748-26 (LogAspect.java:51) - 请求参数1:{"data":{"sceneLocationLongitude":"32","managementUserCode":"12","sceneType":"2","getTime":"2019-01-06 16:44:26","name":"风景图","sceneLocationLatitude":"96","imageInfo":"这是第二号脑图片","id":9,"deviceName":"ak-47","imageType":"1","imageSizeY":640,"imageSizeX":320},"pending":false}
2019-01-07 11:10:56,807:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, image_size_x, image_size_y, get_time,image_type,scene_location_longitude,scene_location_latitude, scene_type,device_name,management_user_code,image_info, create_by, update_time, update_by, ver, is_del from image where id = ? and 1 = 1 
2019-01-07 11:10:56,843:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - ==> Parameters: 9(Long)
2019-01-07 11:10:56,887:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:10:56,892:INFO qtp1579015748-26 (MybatisAutoMapperInterceptor.java:50) - 使用插件处理SQL语句
2019-01-07 11:10:56,893:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - ==>  Preparing: update image set name = ?,image_size_x = ?,image_size_y = ?,get_time = ?,image_type = ?,device_name = ?,scene_location_longitude = ?,scene_location_latitude = ?,scene_type = ?,management_user_code = ?,image_info = ?,update_by = ?,ver = ?,is_del = ?,ver = ver + 1 where id = ? 
2019-01-07 11:10:56,897:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - ==> Parameters: 风景图(String), 320(Long), 640(Long), 2019-01-06 16:44:26.0(Timestamp), 1(String), ak-47(String), 32(String), 96(String), 2(String), 12(String), 这是第二号脑图片(String), SYS(String), 3(Integer), 1(Integer), 9(Long)
2019-01-07 11:10:56,908:DEBUG qtp1579015748-26 (BaseJdbcLogger.java:159) - <==    Updates: 1
2019-01-07 11:10:56,935:INFO qtp1579015748-26 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.update返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 11:11:11,350:INFO qtp1579015748-29 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.detail开始执行
2019-01-07 11:11:11,353:INFO qtp1579015748-29 (LogAspect.java:51) - 请求参数1:{"data":{"id":9},"pending":false}
2019-01-07 11:11:11,366:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, image_size_x, image_size_y, get_time,image_type,scene_location_longitude,scene_location_latitude, scene_type,device_name,management_user_code,image_info, create_by, update_time, update_by, ver, is_del from image where id = ? and 1 = 1 
2019-01-07 11:11:11,368:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - ==> Parameters: 9(Long)
2019-01-07 11:11:11,377:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:11:11,406:INFO qtp1579015748-29 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.detail返回值:{"data":{"deviceName":"ak-47","getTime":"2019-01-06 16:44:26","id":9,"imageInfo":"这是第二号脑图片","imageSizeX":320,"imageSizeY":640,"imageType":"1","managementUserCode":"12","name":"风景图","sceneLocationLatitude":"96","sceneLocationLongitude":"32","sceneType":"2"},"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 11:11:25,949:INFO qtp1579015748-25 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.list开始执行
2019-01-07 11:11:25,955:INFO qtp1579015748-25 (LogAspect.java:51) - 请求参数1:{"data":{"getTime":"2019-01-05 16:44:26"},"pending":false}
2019-01-07 11:11:26,061:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from image WHERE DATE_FORMAT(get_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 
2019-01-07 11:11:26,062:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==> Parameters: 2019-01-05 16:44:26.0(Timestamp)
2019-01-07 11:11:26,072:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:11:26,077:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, image_size_x, image_size_y, get_time,image_type,scene_location_longitude,scene_location_latitude, scene_type,device_name,management_user_code,image_info, create_by, update_time, update_by, ver, is_del from image WHERE DATE_FORMAT(get_time, '%Y-%m-%d %H:%I:%S') >= DATE_FORMAT(?, '%Y-%m-%d %H:%I:%S') and 1 = 1 limit 10 
2019-01-07 11:11:26,078:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==> Parameters: 2019-01-05 16:44:26.0(Timestamp)
2019-01-07 11:11:26,084:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - <==      Total: 2
2019-01-07 11:11:26,109:INFO qtp1579015748-25 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.list返回值:{"data":[{"deviceName":"ak-47","getTime":"2019-01-06 16:44:26","id":9,"imageInfo":"这是第二号脑图片","imageSizeX":320,"imageSizeY":640,"imageType":"1","managementUserCode":"12","name":"风景图","sceneLocationLatitude":"96","sceneLocationLongitude":"32","sceneType":"2"},{"deviceName":"ak-47","getTime":"2019-01-05 16:44:26","id":13,"imageInfo":"这是第三号脑图片","imageSizeX":320,"imageSizeY":640,"imageType":"1","managementUserCode":"12","name":"脑图三号","sceneLocationLatitude":"96","sceneLocationLongitude":"32","sceneType":"2"}],"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":2,"totalPage":1}
2019-01-07 11:11:47,139:INFO qtp1579015748-29 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.delete开始执行
2019-01-07 11:11:47,143:INFO qtp1579015748-29 (LogAspect.java:51) - 请求参数1:{"data":{"id":13},"pending":false}
2019-01-07 11:11:47,150:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, image_size_x, image_size_y, get_time,image_type,scene_location_longitude,scene_location_latitude, scene_type,device_name,management_user_code,image_info, create_by, update_time, update_by, ver, is_del from image where id = ? and 1 = 1 
2019-01-07 11:11:47,151:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - ==> Parameters: 13(Long)
2019-01-07 11:11:47,162:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:11:47,180:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, image_size_x, image_size_y, get_time,image_type,scene_location_longitude,scene_location_latitude, scene_type,device_name,management_user_code,image_info, create_by, update_time, update_by, ver, is_del from image where id = ? and 1 = 1 
2019-01-07 11:11:47,181:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - ==> Parameters: 13(Long)
2019-01-07 11:11:47,188:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:11:47,190:INFO qtp1579015748-29 (MybatisAutoMapperInterceptor.java:50) - 使用插件处理SQL语句
2019-01-07 11:11:47,191:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - ==>  Preparing: update image set name = ?,image_size_x = ?,image_size_y = ?,get_time = ?,image_type = ?,device_name = ?,scene_location_longitude = ?,scene_location_latitude = ?,scene_type = ?,management_user_code = ?,image_info = ?,update_by = ?,ver = ?,is_del = ?,ver = ver + 1 where id = ? 
2019-01-07 11:11:47,195:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - ==> Parameters: 脑图三号(String), 320(Long), 640(Long), 2019-01-05 16:44:26.0(Timestamp), 1(String), ak-47(String), 32(String), 96(String), 2(String), 12(String), 这是第三号脑图片(String), SYS(String), 0(Integer), 1(Integer), 13(Long)
2019-01-07 11:11:47,204:DEBUG qtp1579015748-29 (BaseJdbcLogger.java:159) - <==    Updates: 1
2019-01-07 11:11:47,232:INFO qtp1579015748-29 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.delete返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 11:12:02,713:INFO qtp1579015748-30 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.list开始执行
2019-01-07 11:12:02,713:INFO qtp1579015748-30 (LogAspect.java:51) - 请求参数1:{"data":{"isDel":0},"pending":false}
2019-01-07 11:12:02,719:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from image WHERE is_del = ? and 1 = 1 
2019-01-07 11:12:02,720:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - ==> Parameters: 0(Integer)
2019-01-07 11:12:02,727:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:12:02,731:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, image_size_x, image_size_y, get_time,image_type,scene_location_longitude,scene_location_latitude, scene_type,device_name,management_user_code,image_info, create_by, update_time, update_by, ver, is_del from image WHERE is_del = ? and 1 = 1 limit 10 
2019-01-07 11:12:02,734:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - ==> Parameters: 0(Integer)
2019-01-07 11:12:02,745:DEBUG qtp1579015748-30 (BaseJdbcLogger.java:159) - <==      Total: 3
2019-01-07 11:12:02,753:INFO qtp1579015748-30 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.list返回值:{"data":[{"deviceName":"ak-47","id":10,"imageInfo":"这是第二号脑图片","imageSizeX":320,"imageSizeY":640,"imageType":"1","managementUserCode":"12","name":"脑图二号","sceneLocationLatitude":"96","sceneLocationLongitude":"32","sceneType":"2"},{"deviceName":"ak-47","id":11,"imageInfo":"这是第三号脑图片","imageSizeX":320,"imageSizeY":640,"imageType":"1","managementUserCode":"12","name":"脑图三号","sceneLocationLatitude":"96","sceneLocationLongitude":"32","sceneType":"2"},{"deviceName":"ak-47","id":12,"imageInfo":"这是第二号脑图片","imageSizeX":320,"imageSizeY":640,"imageType":"1","managementUserCode":"12","name":"mapper文件没问题","sceneLocationLatitude":"96","sceneLocationLongitude":"32","sceneType":"2"}],"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":3,"totalPage":1}
2019-01-07 11:12:15,848:INFO qtp1579015748-25 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.list开始执行
2019-01-07 11:12:15,849:INFO qtp1579015748-25 (LogAspect.java:51) - 请求参数1:{"data":{"isDel":1},"pending":false}
2019-01-07 11:12:15,851:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from image WHERE is_del = ? and 1 = 1 
2019-01-07 11:12:15,852:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==> Parameters: 1(Integer)
2019-01-07 11:12:15,859:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:12:15,863:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, image_size_x, image_size_y, get_time,image_type,scene_location_longitude,scene_location_latitude, scene_type,device_name,management_user_code,image_info, create_by, update_time, update_by, ver, is_del from image WHERE is_del = ? and 1 = 1 limit 10 
2019-01-07 11:12:15,864:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - ==> Parameters: 1(Integer)
2019-01-07 11:12:15,870:DEBUG qtp1579015748-25 (BaseJdbcLogger.java:159) - <==      Total: 2
2019-01-07 11:12:15,878:INFO qtp1579015748-25 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.list返回值:{"data":[{"deviceName":"ak-47","getTime":"2019-01-06 16:44:26","id":9,"imageInfo":"这是第二号脑图片","imageSizeX":320,"imageSizeY":640,"imageType":"1","managementUserCode":"12","name":"风景图","sceneLocationLatitude":"96","sceneLocationLongitude":"32","sceneType":"2"},{"deviceName":"ak-47","getTime":"2019-01-05 16:44:26","id":13,"imageInfo":"这是第三号脑图片","imageSizeX":320,"imageSizeY":640,"imageType":"1","managementUserCode":"12","name":"脑图三号","sceneLocationLatitude":"96","sceneLocationLongitude":"32","sceneType":"2"}],"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":2,"totalPage":1}
2019-01-07 11:12:39,706:INFO qtp1579015748-27 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.list开始执行
2019-01-07 11:12:39,707:INFO qtp1579015748-27 (LogAspect.java:51) - 请求参数1:{"data":{"isDel":0},"pending":false}
2019-01-07 11:12:39,712:DEBUG qtp1579015748-27 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from image WHERE is_del = ? and 1 = 1 
2019-01-07 11:12:39,713:DEBUG qtp1579015748-27 (BaseJdbcLogger.java:159) - ==> Parameters: 0(Integer)
2019-01-07 11:12:39,721:DEBUG qtp1579015748-27 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 11:12:39,726:DEBUG qtp1579015748-27 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, image_size_x, image_size_y, get_time,image_type,scene_location_longitude,scene_location_latitude, scene_type,device_name,management_user_code,image_info, create_by, update_time, update_by, ver, is_del from image WHERE is_del = ? and 1 = 1 limit 10 
2019-01-07 11:12:39,727:DEBUG qtp1579015748-27 (BaseJdbcLogger.java:159) - ==> Parameters: 0(Integer)
2019-01-07 11:12:39,734:DEBUG qtp1579015748-27 (BaseJdbcLogger.java:159) - <==      Total: 3
2019-01-07 11:12:39,742:INFO qtp1579015748-27 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.list返回值:{"data":[{"deviceName":"ak-47","id":10,"imageInfo":"这是第二号脑图片","imageSizeX":320,"imageSizeY":640,"imageType":"1","managementUserCode":"12","name":"脑图二号","sceneLocationLatitude":"96","sceneLocationLongitude":"32","sceneType":"2"},{"deviceName":"ak-47","id":11,"imageInfo":"这是第三号脑图片","imageSizeX":320,"imageSizeY":640,"imageType":"1","managementUserCode":"12","name":"脑图三号","sceneLocationLatitude":"96","sceneLocationLongitude":"32","sceneType":"2"},{"deviceName":"ak-47","id":12,"imageInfo":"这是第二号脑图片","imageSizeX":320,"imageSizeY":640,"imageType":"1","managementUserCode":"12","name":"mapper文件没问题","sceneLocationLatitude":"96","sceneLocationLongitude":"32","sceneType":"2"}],"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":3,"totalPage":1}
2019-01-07 13:41:45,950:INFO main (EnumUtils.java:192) - EnumScanner将扫描:com.ygbc.brain
2019-01-07 13:41:46,153:INFO main (EnumUtils.java:106) - 加载枚举:ObjectType
2019-01-07 13:41:46,154:INFO main (EnumUtils.java:106) - 加载枚举:TransactionType
2019-01-07 13:41:46,154:INFO main (EnumUtils.java:106) - 加载枚举:ExperimentRecordType
2019-01-07 13:41:46,154:INFO main (EnumUtils.java:106) - 加载枚举:DocumentType
2019-01-07 13:41:46,155:INFO main (EnumUtils.java:106) - 加载枚举:TransactionStatus
2019-01-07 13:41:46,155:INFO main (EnumUtils.java:106) - 加载枚举:LcReferenceType
2019-01-07 13:41:46,155:INFO main (EnumUtils.java:106) - 加载枚举:PendingStatus
2019-01-07 13:41:46,155:INFO main (EnumUtils.java:106) - 加载枚举:ReferenceType
2019-01-07 13:41:46,155:INFO main (EnumUtils.java:111) - 加载枚举:TrueFalse
2019-01-07 13:41:46,156:INFO main (EnumUtils.java:111) - 加载枚举:YesNo
2019-01-07 13:41:46,156:INFO main (EnumUtils.java:111) - 加载枚举:AllowType
2019-01-07 13:41:46,156:INFO main (EnumUtils.java:111) - 加载枚举:UserStatus
2019-01-07 13:42:30,372:INFO qtp1579015748-30 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.create开始执行
2019-01-07 13:42:30,409:INFO qtp1579015748-30 (LogAspect.java:51) - 请求参数1:{"data":{"experimentPlace":"soho 1902","experimentTime":"2019-01-04 16:44:26","planStartTime":"2019-01-04 16:44:26","stitchImageSrc":"/user/desktop/","managementUserId":"2","experimentImageId":"image_one","name":"测试mapper文件","planEndTime":"2019-01-07 16:44:26","preTreatingImageSrc":"/user/desktop/after","status":"1"},"pending":false}
2019-01-07 13:42:30,615:INFO qtp1579015748-30 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.create返回值:{"errors":{"status":"无效的实验状态"},"pageNo":1,"pageSize":10,"respCode":"9004","respMsg":"参数校验未通过","totalCount":0,"totalPage":0}
2019-01-07 13:42:55,222:INFO qtp1579015748-25 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.create开始执行
2019-01-07 13:42:55,224:INFO qtp1579015748-25 (LogAspect.java:51) - 请求参数1:{"data":{"experimentPlace":"soho 1902","experimentTime":"2019-01-04 16:44:26","planStartTime":"2019-01-04 16:44:26","stitchImageSrc":"/user/desktop/","managementUserId":"2","experimentImageId":"image_one","name":"测试mapper文件","planEndTime":"2019-01-07 16:44:26","preTreatingImageSrc":"/user/desktop/after","status":"W"},"pending":false}
2019-01-07 13:42:55,227:INFO qtp1579015748-25 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.create返回值:{"errors":{"status":"无效的实验状态"},"pageNo":1,"pageSize":10,"respCode":"9004","respMsg":"参数校验未通过","totalCount":0,"totalPage":0}
2019-01-07 13:45:47,283:INFO main (EnumUtils.java:192) - EnumScanner将扫描:com.ygbc.brain
2019-01-07 13:45:47,485:INFO main (EnumUtils.java:106) - 加载枚举:ObjectType
2019-01-07 13:45:47,485:INFO main (EnumUtils.java:106) - 加载枚举:TransactionType
2019-01-07 13:45:47,486:INFO main (EnumUtils.java:106) - 加载枚举:ExperimentRecordType
2019-01-07 13:45:47,486:INFO main (EnumUtils.java:106) - 加载枚举:DocumentType
2019-01-07 13:45:47,486:INFO main (EnumUtils.java:106) - 加载枚举:TransactionStatus
2019-01-07 13:45:47,486:INFO main (EnumUtils.java:106) - 加载枚举:LcReferenceType
2019-01-07 13:45:47,487:INFO main (EnumUtils.java:106) - 加载枚举:PendingStatus
2019-01-07 13:45:47,487:INFO main (EnumUtils.java:106) - 加载枚举:ReferenceType
2019-01-07 13:45:47,487:INFO main (EnumUtils.java:111) - 加载枚举:TrueFalse
2019-01-07 13:45:47,487:INFO main (EnumUtils.java:111) - 加载枚举:YesNo
2019-01-07 13:45:47,488:INFO main (EnumUtils.java:111) - 加载枚举:AllowType
2019-01-07 13:45:47,488:INFO main (EnumUtils.java:111) - 加载枚举:UserStatus
2019-01-07 13:46:04,596:INFO qtp2147002844-30 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.create开始执行
2019-01-07 13:46:04,641:INFO qtp2147002844-30 (LogAspect.java:51) - 请求参数1:{"data":{"experimentEndTime":"2019-01-07 16:44:26","experimentImpedance":10,"experimentStartTime":"2019-01-04 16:44:26","subjectUserId":"10","deviceNumber":"AK47","sampleRate":2000,"experimentType":"1","referenceElectrode":"123456","experimentPlace":"北京","hz":1000,"experimentPeriod":10,"brainWave":"这个脑波的图样跟爱因斯坦的一模一样卧槽","name":"第一个实验记录","temperature":26,"experimentCode":"9","subjectUserName":"tom"},"pending":false}
2019-01-07 13:46:04,844:INFO qtp2147002844-30 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.create返回值:{"errors":{"experimentType":"无效的实验类型"},"pageNo":1,"pageSize":10,"respCode":"9004","respMsg":"参数校验未通过","totalCount":0,"totalPage":0}
2019-01-07 13:57:22,575:INFO qtp2147002844-27 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list开始执行
2019-01-07 13:57:22,585:INFO qtp2147002844-27 (LogAspect.java:51) - 请求参数1:{"data":{"isDel":1},"pending":false}
2019-01-07 13:57:22,591:INFO qtp2147002844-27 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list返回值:{"errors":{"experimentType":"无效的实验类型"},"pageNo":1,"pageSize":10,"respCode":"9004","respMsg":"参数校验未通过","totalCount":0,"totalPage":0}
2019-01-07 14:25:50,193:INFO main (EnumUtils.java:192) - EnumScanner将扫描:com.ygbc.brain
2019-01-07 14:25:50,404:INFO main (EnumUtils.java:106) - 加载枚举:ObjectType
2019-01-07 14:25:50,405:INFO main (EnumUtils.java:106) - 加载枚举:TransactionType
2019-01-07 14:25:50,405:INFO main (EnumUtils.java:106) - 加载枚举:ExperimentRecordType
2019-01-07 14:25:50,405:INFO main (EnumUtils.java:106) - 加载枚举:ExperimentStatus
2019-01-07 14:25:50,406:INFO main (EnumUtils.java:106) - 加载枚举:DocumentType
2019-01-07 14:25:50,406:INFO main (EnumUtils.java:106) - 加载枚举:TransactionStatus
2019-01-07 14:25:50,406:INFO main (EnumUtils.java:106) - 加载枚举:LcReferenceType
2019-01-07 14:25:50,407:INFO main (EnumUtils.java:106) - 加载枚举:PendingStatus
2019-01-07 14:25:50,407:INFO main (EnumUtils.java:106) - 加载枚举:ReferenceType
2019-01-07 14:25:50,407:INFO main (EnumUtils.java:111) - 加载枚举:TrueFalse
2019-01-07 14:25:50,407:INFO main (EnumUtils.java:111) - 加载枚举:ImageSceneType
2019-01-07 14:25:50,407:INFO main (EnumUtils.java:111) - 加载枚举:YesNo
2019-01-07 14:25:50,408:INFO main (EnumUtils.java:111) - 加载枚举:AllowType
2019-01-07 14:25:50,408:INFO main (EnumUtils.java:111) - 加载枚举:UserStatus
2019-01-07 14:25:50,408:INFO main (EnumUtils.java:111) - 加载枚举:ImageType
2019-01-07 14:26:10,187:INFO qtp28612052-26 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list开始执行
2019-01-07 14:26:10,222:INFO qtp28612052-26 (LogAspect.java:51) - 请求参数1:{"data":{"isDel":1},"pending":false}
2019-01-07 14:26:10,523:DEBUG qtp28612052-26 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from experiment_record WHERE is_del = ? and 1 = 1 
2019-01-07 14:26:10,561:DEBUG qtp28612052-26 (BaseJdbcLogger.java:159) - ==> Parameters: 1(Integer)
2019-01-07 14:26:10,588:DEBUG qtp28612052-26 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 14:26:10,596:DEBUG qtp28612052-26 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, experiment_code, subject_user_id, subject_user_name,experiment_start_time,experiment_end_time,experiment_period, experiment_place,experiment_type,hz,sample_rate,experiment_impedance,reference_electrode,device_number,temperature,brain_wave, create_by, update_time, update_by, ver, is_del from experiment_record WHERE is_del = ? and 1 = 1 limit 10 
2019-01-07 14:26:10,597:DEBUG qtp28612052-26 (BaseJdbcLogger.java:159) - ==> Parameters: 1(Integer)
2019-01-07 14:26:10,616:DEBUG qtp28612052-26 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 14:26:10,670:INFO qtp28612052-26 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list返回值:{"data":[{"brainWave":"这个脑波的图样跟爱因斯坦的一模一样卧槽","deviceNumber":"AK47","experimentCode":"9","experimentEndTime":"2019-01-08 16:44:26","experimentImpedance":10,"experimentPeriod":10,"experimentPlace":"北京","experimentStartTime":"2019-01-04 16:44:26","experimentType":"1","hz":1000,"id":13,"name":"mapper文件没问题","referenceElectrode":"123456","sampleRate":2000,"subjectUserId":"10","subjectUserName":"tom","temperature":26}],"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":1,"totalPage":1}
2019-01-07 14:28:55,111:INFO qtp28612052-26 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.create开始执行
2019-01-07 14:28:55,117:INFO qtp28612052-26 (LogAspect.java:51) - 请求参数1:{"data":{"experimentEndTime":"2019-01-07 16:44:26","experimentImpedance":10,"experimentStartTime":"2019-01-04 16:44:26","subjectUserId":"10","deviceNumber":"AK47","sampleRate":2000,"experimentType":"1","referenceElectrode":"123456","experimentPlace":"北京","hz":1000,"experimentPeriod":10,"brainWave":"这个脑波的图样跟爱因斯坦的一模一样卧槽","name":"第一个实验记录","temperature":26,"experimentCode":"9","subjectUserName":"tom"},"pending":false}
2019-01-07 14:28:55,166:INFO qtp28612052-26 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.create返回值:{"errors":{"experimentType":"无效的实验类型"},"pageNo":1,"pageSize":10,"respCode":"9004","respMsg":"参数校验未通过","totalCount":0,"totalPage":0}
2019-01-07 14:29:04,405:INFO qtp28612052-26 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.create开始执行
2019-01-07 14:29:04,406:INFO qtp28612052-26 (LogAspect.java:51) - 请求参数1:{"data":{"experimentEndTime":"2019-01-07 16:44:26","experimentImpedance":10,"experimentStartTime":"2019-01-04 16:44:26","subjectUserId":"10","deviceNumber":"AK47","sampleRate":2000,"experimentType":"S","referenceElectrode":"123456","experimentPlace":"北京","hz":1000,"experimentPeriod":10,"brainWave":"这个脑波的图样跟爱因斯坦的一模一样卧槽","name":"第一个实验记录","temperature":26,"experimentCode":"9","subjectUserName":"tom"},"pending":false}
2019-01-07 14:29:04,437:INFO qtp28612052-26 (MybatisAutoMapperInterceptor.java:50) - 使用插件处理SQL语句
2019-01-07 14:29:04,451:DEBUG qtp28612052-26 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into experiment_record(name,experiment_code,subject_user_id,subject_user_name,experiment_start_time,experiment_end_time,experiment_period,experiment_place,experiment_type,hz,sample_rate,experiment_impedance,reference_electrode,device_number,temperature,brain_wave) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
2019-01-07 14:29:04,457:DEBUG qtp28612052-26 (BaseJdbcLogger.java:159) - ==> Parameters: 第一个实验记录(String), 9(String), 10(String), tom(String), 2019-01-04 16:44:26.0(Timestamp), 2019-01-07 16:44:26.0(Timestamp), 10(Integer), 北京(String), S(String), 1000(Integer), 2000(Integer), 10(Integer), 123456(String), AK47(String), 26(Integer), 这个脑波的图样跟爱因斯坦的一模一样卧槽(String)
2019-01-07 14:29:04,514:DEBUG qtp28612052-26 (BaseJdbcLogger.java:159) - <==    Updates: 1
2019-01-07 14:29:04,516:INFO qtp28612052-26 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.create返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 14:29:44,448:INFO qtp28612052-29 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.detail开始执行
2019-01-07 14:29:44,450:INFO qtp28612052-29 (LogAspect.java:51) - 请求参数1:{"data":{"id":14},"pending":false}
2019-01-07 14:29:44,465:DEBUG qtp28612052-29 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, experiment_code, subject_user_id, subject_user_name,experiment_start_time,experiment_end_time,experiment_period, experiment_place,experiment_type,hz,sample_rate,experiment_impedance,reference_electrode,device_number,temperature,brain_wave, create_by, update_time, update_by, ver, is_del from experiment_record where id = ? and 1 = 1 
2019-01-07 14:29:44,466:DEBUG qtp28612052-29 (BaseJdbcLogger.java:159) - ==> Parameters: 14(Long)
2019-01-07 14:29:44,478:DEBUG qtp28612052-29 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 14:29:44,480:INFO qtp28612052-29 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.detail返回值:{"data":{"brainWave":"这个脑波的图样跟爱因斯坦的一模一样卧槽","deviceNumber":"AK47","experimentCode":"9","experimentEndTime":"2019-01-07 16:44:26","experimentImpedance":10,"experimentPeriod":10,"experimentPlace":"北京","experimentStartTime":"2019-01-04 16:44:26","experimentType":"S","hz":1000,"id":14,"name":"第一个实验记录","referenceElectrode":"123456","sampleRate":2000,"subjectUserId":"10","subjectUserName":"tom","temperature":26},"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 14:29:50,403:INFO qtp28612052-27 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list开始执行
2019-01-07 14:29:50,404:INFO qtp28612052-27 (LogAspect.java:51) - 请求参数1:{"data":{"isDel":1},"pending":false}
2019-01-07 14:29:50,407:DEBUG qtp28612052-27 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from experiment_record WHERE is_del = ? and 1 = 1 
2019-01-07 14:29:50,408:DEBUG qtp28612052-27 (BaseJdbcLogger.java:159) - ==> Parameters: 1(Integer)
2019-01-07 14:29:50,416:DEBUG qtp28612052-27 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 14:29:50,418:DEBUG qtp28612052-27 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, experiment_code, subject_user_id, subject_user_name,experiment_start_time,experiment_end_time,experiment_period, experiment_place,experiment_type,hz,sample_rate,experiment_impedance,reference_electrode,device_number,temperature,brain_wave, create_by, update_time, update_by, ver, is_del from experiment_record WHERE is_del = ? and 1 = 1 limit 10 
2019-01-07 14:29:50,420:DEBUG qtp28612052-27 (BaseJdbcLogger.java:159) - ==> Parameters: 1(Integer)
2019-01-07 14:29:50,427:DEBUG qtp28612052-27 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 14:29:50,437:INFO qtp28612052-27 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list返回值:{"data":[{"brainWave":"这个脑波的图样跟爱因斯坦的一模一样卧槽","deviceNumber":"AK47","experimentCode":"9","experimentEndTime":"2019-01-08 16:44:26","experimentImpedance":10,"experimentPeriod":10,"experimentPlace":"北京","experimentStartTime":"2019-01-04 16:44:26","experimentType":"1","hz":1000,"id":13,"name":"mapper文件没问题","referenceElectrode":"123456","sampleRate":2000,"subjectUserId":"10","subjectUserName":"tom","temperature":26}],"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":1,"totalPage":1}
2019-01-07 14:29:59,335:INFO qtp28612052-29 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list开始执行
2019-01-07 14:29:59,335:INFO qtp28612052-29 (LogAspect.java:51) - 请求参数1:{"data":{"isDel":0},"pending":false}
2019-01-07 14:29:59,340:DEBUG qtp28612052-29 (BaseJdbcLogger.java:159) - ==>  Preparing: select count(1) from experiment_record WHERE is_del = ? and 1 = 1 
2019-01-07 14:29:59,340:DEBUG qtp28612052-29 (BaseJdbcLogger.java:159) - ==> Parameters: 0(Integer)
2019-01-07 14:29:59,348:DEBUG qtp28612052-29 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 14:29:59,353:DEBUG qtp28612052-29 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, experiment_code, subject_user_id, subject_user_name,experiment_start_time,experiment_end_time,experiment_period, experiment_place,experiment_type,hz,sample_rate,experiment_impedance,reference_electrode,device_number,temperature,brain_wave, create_by, update_time, update_by, ver, is_del from experiment_record WHERE is_del = ? and 1 = 1 limit 10 
2019-01-07 14:29:59,355:DEBUG qtp28612052-29 (BaseJdbcLogger.java:159) - ==> Parameters: 0(Integer)
2019-01-07 14:29:59,361:DEBUG qtp28612052-29 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 14:29:59,367:INFO qtp28612052-29 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentRecordServiceFacadeImpl.list返回值:{"data":[{"brainWave":"这个脑波的图样跟爱因斯坦的一模一样卧槽","deviceNumber":"AK47","experimentCode":"9","experimentEndTime":"2019-01-07 16:44:26","experimentImpedance":10,"experimentPeriod":10,"experimentPlace":"北京","experimentStartTime":"2019-01-04 16:44:26","experimentType":"S","hz":1000,"id":14,"name":"第一个实验记录","referenceElectrode":"123456","sampleRate":2000,"subjectUserId":"10","subjectUserName":"tom","temperature":26}],"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":1,"totalPage":1}
2019-01-07 14:30:19,332:INFO qtp28612052-30 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.create开始执行
2019-01-07 14:30:19,337:INFO qtp28612052-30 (LogAspect.java:51) - 请求参数1:{"data":{"sceneLocationLongitude":"32","managementUserCode":"12","sceneType":2,"name":"脑图三号","sceneLocationLatitude":"96","imageInfo":"这是第三号脑图片","deviceName":"ak-47","imageType":1,"imageSizeY":640,"imageSizeX":320},"pending":false}
2019-01-07 14:30:19,366:ERROR qtp28612052-30 (LogAspect.java:76) - com.ygbc.brain.business.management.service.ImageCreateService.execute发生异常:
javax.validation.UnexpectedTypeException: HV000030: No validator could be found for type: java.lang.Integer.
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintValidatorManager.verifyResolveWasUnique(ConstraintValidatorManager.java:218) ~[hibernate-validator-5.1.0.Final.jar:5.1.0.Final]
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintValidatorManager.findMatchingValidatorClass(ConstraintValidatorManager.java:193) ~[hibernate-validator-5.1.0.Final.jar:5.1.0.Final]
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintValidatorManager.getInitializedValidator(ConstraintValidatorManager.java:97) ~[hibernate-validator-5.1.0.Final.jar:5.1.0.Final]
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:125) ~[hibernate-validator-5.1.0.Final.jar:5.1.0.Final]
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:91) ~[hibernate-validator-5.1.0.Final.jar:5.1.0.Final]
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:84) ~[hibernate-validator-5.1.0.Final.jar:5.1.0.Final]
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraint(ValidatorImpl.java:525) ~[hibernate-validator-5.1.0.Final.jar:5.1.0.Final]
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:465) ~[hibernate-validator-5.1.0.Final.jar:5.1.0.Final]
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:429) ~[hibernate-validator-5.1.0.Final.jar:5.1.0.Final]
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:381) ~[hibernate-validator-5.1.0.Final.jar:5.1.0.Final]
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateCascadedConstraint(ValidatorImpl.java:682) ~[hibernate-validator-5.1.0.Final.jar:5.1.0.Final]
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateCascadedConstraints(ValidatorImpl.java:571) ~[hibernate-validator-5.1.0.Final.jar:5.1.0.Final]
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:390) ~[hibernate-validator-5.1.0.Final.jar:5.1.0.Final]
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:184) ~[hibernate-validator-5.1.0.Final.jar:5.1.0.Final]
	at com.ygbc.brain.common.aspect.validate.FieldValidator.validateFieldErrors(FieldValidator.java:60) ~[brain-common-utils-1.0.0-SNAPSHOT.jar:?]
	at com.ygbc.brain.common.aspect.FieldValidateAspect.around(FieldValidateAspect.java:54) ~[brain-common-utils-1.0.0-SNAPSHOT.jar:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_161]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_161]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_161]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:620) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:609) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:68) ~[spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:59) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at com.ygbc.brain.business.management.service.ImageCreateService$$EnhancerBySpringCGLIB$$98f8c3c9.execute(<generated>) [brain-business-management-service-1.0.0-SNAPSHOT.jar:?]
	at com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.create(ImageServiceFacadeImpl.java:43) [brain-business-management-service-1.0.0-SNAPSHOT.jar:?]
	at com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl$$FastClassBySpringCGLIB$$e194e327.invoke(<generated>) [brain-business-management-service-1.0.0-SNAPSHOT.jar:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) [spring-core-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:720) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:59) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:655) [spring-aop-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl$$EnhancerBySpringCGLIB$$55d946d1.create(<generated>) [brain-business-management-service-1.0.0-SNAPSHOT.jar:?]
	at com.ygbc.brain.business.management.web.controller.ImageServiceController.create(ImageServiceController.java:38) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_161]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_161]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_161]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_161]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:832) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:743) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:961) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:895) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:967) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:869) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:755) [javax.servlet-3.0.0.v201112011016.jar:?]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:843) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848) [javax.servlet-3.0.0.v201112011016.jar:?]
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:684) [jetty-servlet-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1496) [jetty-servlet-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1476) [jetty-servlet-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:501) [jetty-servlet-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137) [jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557) [jetty-security-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231) [jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086) [jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:429) [jetty-servlet-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193) [jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020) [jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135) [jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255) [jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154) [jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116) [jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.server.Server.handle(Server.java:370) [jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:494) [jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:982) [jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1043) [jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865) [jetty-http-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240) [jetty-http-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82) [jetty-server-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:696) [jetty-io-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:53) [jetty-io-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608) [jetty-util-8.1.16.v20140903.jar:8.1.16.v20140903]
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543) [jetty-util-8.1.16.v20140903.jar:8.1.16.v20140903]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_161]
2019-01-07 14:30:19,382:INFO qtp28612052-30 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.create返回值:{"addition":"javax.validation.UnexpectedTypeException: HV000030: No validator could be found for type: java.lang.Integer.","pageNo":1,"pageSize":10,"respCode":"9999","respMsg":"处理失败","totalCount":0,"totalPage":0}
2019-01-07 14:32:17,784:INFO main (EnumUtils.java:192) - EnumScanner将扫描:com.ygbc.brain
2019-01-07 14:32:17,993:INFO main (EnumUtils.java:106) - 加载枚举:ObjectType
2019-01-07 14:32:17,994:INFO main (EnumUtils.java:106) - 加载枚举:TransactionType
2019-01-07 14:32:17,994:INFO main (EnumUtils.java:106) - 加载枚举:ExperimentStatus
2019-01-07 14:32:17,994:INFO main (EnumUtils.java:106) - 加载枚举:ExperimentType
2019-01-07 14:32:17,995:INFO main (EnumUtils.java:106) - 加载枚举:DocumentType
2019-01-07 14:32:17,995:INFO main (EnumUtils.java:106) - 加载枚举:TransactionStatus
2019-01-07 14:32:17,995:INFO main (EnumUtils.java:106) - 加载枚举:LcReferenceType
2019-01-07 14:32:17,995:INFO main (EnumUtils.java:106) - 加载枚举:PendingStatus
2019-01-07 14:32:17,996:INFO main (EnumUtils.java:106) - 加载枚举:ReferenceType
2019-01-07 14:32:17,996:INFO main (EnumUtils.java:111) - 加载枚举:TrueFalse
2019-01-07 14:32:17,996:INFO main (EnumUtils.java:111) - 加载枚举:ImageSceneType
2019-01-07 14:32:17,996:INFO main (EnumUtils.java:111) - 加载枚举:YesNo
2019-01-07 14:32:17,996:INFO main (EnumUtils.java:111) - 加载枚举:AllowType
2019-01-07 14:32:17,997:INFO main (EnumUtils.java:111) - 加载枚举:UserStatus
2019-01-07 14:32:17,997:INFO main (EnumUtils.java:111) - 加载枚举:ImageType
2019-01-07 14:32:26,354:INFO qtp2147002844-29 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.create开始执行
2019-01-07 14:32:26,391:INFO qtp2147002844-29 (LogAspect.java:51) - 请求参数1:{"data":{"sceneLocationLongitude":"32","managementUserCode":"12","sceneType":2,"name":"脑图三号","sceneLocationLatitude":"96","imageInfo":"这是第三号脑图片","deviceName":"ak-47","imageType":1,"imageSizeY":640,"imageSizeX":320},"pending":false}
2019-01-07 14:32:26,594:INFO qtp2147002844-29 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.create返回值:{"errors":{"getTime":"请输入拍摄时间"},"pageNo":1,"pageSize":10,"respCode":"9004","respMsg":"参数校验未通过","totalCount":0,"totalPage":0}
2019-01-07 14:32:57,702:INFO qtp2147002844-25 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.create开始执行
2019-01-07 14:32:57,704:INFO qtp2147002844-25 (LogAspect.java:51) - 请求参数1:{"data":{"sceneLocationLongitude":"32","managementUserCode":"12","sceneType":2,"getTime":"2019-01-07 16:44:26","name":"脑图三号","sceneLocationLatitude":"96","imageInfo":"这是第三号脑图片","deviceName":"ak-47","imageType":1,"imageSizeY":640,"imageSizeX":320},"pending":false}
2019-01-07 14:32:57,812:INFO qtp2147002844-25 (MybatisAutoMapperInterceptor.java:50) - 使用插件处理SQL语句
2019-01-07 14:32:57,827:DEBUG qtp2147002844-25 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into image(name,image_size_x,image_size_y,get_time,image_type,device_name,scene_location_longitude,scene_location_latitude,scene_type,management_user_code,image_info) values (?,?,?,?,?,?,?,?,?,?,?) 
2019-01-07 14:32:57,870:DEBUG qtp2147002844-25 (BaseJdbcLogger.java:159) - ==> Parameters: 脑图三号(String), 320(Long), 640(Long), 2019-01-07 16:44:26.0(Timestamp), 1(Integer), ak-47(String), 32(String), 96(String), 2(Integer), 12(String), 这是第三号脑图片(String)
2019-01-07 14:32:57,885:DEBUG qtp2147002844-25 (BaseJdbcLogger.java:159) - <==    Updates: 1
2019-01-07 14:32:57,931:INFO qtp2147002844-25 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.create返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 14:33:35,311:INFO qtp2147002844-28 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.detail开始执行
2019-01-07 14:33:35,315:INFO qtp2147002844-28 (LogAspect.java:51) - 请求参数1:{"data":{"id":14},"pending":false}
2019-01-07 14:33:35,343:DEBUG qtp2147002844-28 (BaseJdbcLogger.java:159) - ==>  Preparing: select id, code, name, image_size_x, image_size_y, get_time,image_type,scene_location_longitude,scene_location_latitude, scene_type,device_name,management_user_code,image_info, create_by, update_time, update_by, ver, is_del from image where id = ? and 1 = 1 
2019-01-07 14:33:35,344:DEBUG qtp2147002844-28 (BaseJdbcLogger.java:159) - ==> Parameters: 14(Long)
2019-01-07 14:33:35,365:DEBUG qtp2147002844-28 (BaseJdbcLogger.java:159) - <==      Total: 1
2019-01-07 14:33:35,396:INFO qtp2147002844-28 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ImageServiceFacadeImpl.detail返回值:{"data":{"deviceName":"ak-47","getTime":"2019-01-07 16:44:26","id":14,"imageInfo":"这是第三号脑图片","imageSizeX":320,"imageSizeY":640,"imageType":1,"managementUserCode":"12","name":"脑图三号","sceneLocationLatitude":"96","sceneLocationLongitude":"32","sceneType":2},"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
2019-01-07 14:34:12,993:INFO qtp2147002844-27 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.create开始执行
2019-01-07 14:34:13,000:INFO qtp2147002844-27 (LogAspect.java:51) - 请求参数1:{"data":{"experimentPlace":"soho 1902","experimentTime":"2019-01-04 16:44:26","planStartTime":"2019-01-04 16:44:26","stitchImageSrc":"/user/desktop/","managementUserId":"2","experimentImageId":"image_one","name":"测试mapper文件","planEndTime":"2019-01-07 16:44:26","preTreatingImageSrc":"/user/desktop/after","status":"1"},"pending":false}
2019-01-07 14:34:13,023:INFO qtp2147002844-27 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.create返回值:{"errors":{"status":"无效的实验状态"},"pageNo":1,"pageSize":10,"respCode":"9004","respMsg":"参数校验未通过","totalCount":0,"totalPage":0}
2019-01-07 14:34:22,894:INFO qtp2147002844-25 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.create开始执行
2019-01-07 14:34:22,895:INFO qtp2147002844-25 (LogAspect.java:51) - 请求参数1:{"data":{"experimentPlace":"soho 1902","experimentTime":"2019-01-04 16:44:26","planStartTime":"2019-01-04 16:44:26","stitchImageSrc":"/user/desktop/","managementUserId":"2","experimentImageId":"image_one","name":"测试mapper文件","planEndTime":"2019-01-07 16:44:26","preTreatingImageSrc":"/user/desktop/after","status":"W"},"pending":false}
2019-01-07 14:34:22,899:INFO qtp2147002844-25 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.create返回值:{"errors":{"status":"无效的实验状态"},"pageNo":1,"pageSize":10,"respCode":"9004","respMsg":"参数校验未通过","totalCount":0,"totalPage":0}
2019-01-07 14:34:34,745:INFO qtp2147002844-30 (LogAspect.java:32) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.create开始执行
2019-01-07 14:34:34,746:INFO qtp2147002844-30 (LogAspect.java:51) - 请求参数1:{"data":{"experimentPlace":"soho 1902","experimentTime":"2019-01-04 16:44:26","planStartTime":"2019-01-04 16:44:26","stitchImageSrc":"/user/desktop/","managementUserId":"2","experimentImageId":"image_one","name":"测试mapper文件","planEndTime":"2019-01-07 16:44:26","preTreatingImageSrc":"/user/desktop/after","status":"C"},"pending":false}
2019-01-07 14:34:34,798:INFO qtp2147002844-30 (MybatisAutoMapperInterceptor.java:50) - 使用插件处理SQL语句
2019-01-07 14:34:34,799:DEBUG qtp2147002844-30 (BaseJdbcLogger.java:159) - ==>  Preparing: insert into experiment(name,experiment_time,experiment_place,management_user_id,experiment_image_id,plan_start_time,plan_end_time,stitch_image_src,pre_treating_image_src,status) values (?,?,?,?,?,?,?,?,?,?) 
2019-01-07 14:34:34,800:DEBUG qtp2147002844-30 (BaseJdbcLogger.java:159) - ==> Parameters: 测试mapper文件(String), 2019-01-04 16:44:26.0(Timestamp), soho 1902(String), 2(String), image_one(String), 2019-01-04 16:44:26.0(Timestamp), 2019-01-07 16:44:26.0(Timestamp), /user/desktop/(String), /user/desktop/after(String), C(String)
2019-01-07 14:34:34,811:DEBUG qtp2147002844-30 (BaseJdbcLogger.java:159) - <==    Updates: 1
2019-01-07 14:34:34,844:INFO qtp2147002844-30 (LogAspect.java:64) - com.ygbc.brain.business.management.api.impl.ExperimentServiceFacadeImpl.create返回值:{"pageNo":1,"pageSize":10,"respCode":"0000","respMsg":"成功","totalCount":0,"totalPage":0}
